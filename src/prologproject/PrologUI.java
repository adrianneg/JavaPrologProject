/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prologproject;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.jpl7.Query;
import org.jpl7.Term;
import org.jpl7.Variable;

/**
 *
 * @author jevaughnferguson
 */
public class PrologUI extends javax.swing.JFrame {

    /**
     * Creates new form PrologUI
     */

    public PrologUI() {
        initComponents();
         jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
        jTabbedPane3.setVisible(false);
        this.setSize(new Dimension(856, 645));
        Path currentRelativePath = Paths.get("");
        String s = currentRelativePath.toAbsolutePath().toString()+"/test cases";
            File[] files = new File[]{
                            new File(s + "/crime_file.txt"),
                            new File(s + "/crime_org.txt"),
                            new File(s + "/org_member.txt"),
                            new File(s + "/suspect_file.txt")
                        };

        loadInfo(files);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem14 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();

        jMenuItem14.setText("jMenuItem14");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Case Analysis by Task Force X");
        setFont(new java.awt.Font("BlairMdITC TT", 0, 12)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(51, 102, 255));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("No records available");
        jTabbedPane1.addTab("Welcome", jLabel3);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("Crime ID");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Items taken");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel9.setText("Weapons used");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Location");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Places Attacked");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel10.setText("Criminal Traits");

        jButton2.setBackground(new java.awt.Color(0, 102, 255));
        jButton2.setForeground(new java.awt.Color(51, 51, 255));
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("Finish");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jFormattedTextField2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextField2.setToolTipText("");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(151, 151, 151)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(51, 51, 51))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18))))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("", jPanel1);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Organization Name ");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel11.setText("Interests");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel12.setText("Operating locations");

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel13.setText("Weapons");

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel14.setText("Traits");

        jButton4.setForeground(new java.awt.Color(51, 51, 255));
        jButton4.setText("Add");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setForeground(new java.awt.Color(255, 51, 51));
        jButton5.setText("Finish");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel11))
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField8)
                    .addComponent(jTextField9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("", jPanel6);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel15.setText("crime ID");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel18.setText("Suspect Name");

        jLabel19.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel19.setText("Traits");

        jButton8.setForeground(new java.awt.Color(51, 51, 255));
        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setForeground(new java.awt.Color(255, 51, 51));
        jButton9.setText("Finish");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField15))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("", jPanel11);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel16.setText("organization name");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel17.setText("member name");

        jButton6.setForeground(new java.awt.Color(51, 51, 255));
        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setForeground(new java.awt.Color(255, 51, 51));
        jButton7.setText("Finish");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7))
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(208, 208, 208))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("", jPanel7);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setViewportView(jList1);

        jScrollPane3.setViewportView(jList3);

        jLabel2.setText("Suspected Organization");

        jLabel20.setText("Members of Organizations");

        jLabel21.setText("Operating Location of Organization");

        jLabel22.setText("Suspects");

        jLabel23.setText("Weapons used by Organizations");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(jTable3);

        jButton1.setText("Finish");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                        .addGap(21, 21, 21))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel2)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                                        .addGap(168, 168, 168)))
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                        .addGap(135, 135, 135))
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(4, 4, 4))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Crime 1", jPanel10);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jTabbedPane2)
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jTabbedPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTabbedPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jTabbedPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel9.setBackground(new java.awt.Color(51, 102, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("BlairMdITC TT", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" The Central Criminal Fighting Agency");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem17.setText("Load file");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem17);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Assert");

        jMenuItem12.setText("Crime file");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem12);

        jMenuItem13.setText("Crime org file");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem13);

        jMenuItem16.setText("suspect file");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem16);

        jMenuItem15.setText("org member file");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem15);

        jMenuBar1.add(jMenu4);

        jMenu3.setText("Retract");

        jMenuItem6.setText("crime file");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("crime org file");
        jMenuItem7.setToolTipText("");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("org member file");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem9.setText("suspect file");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Retract all ");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Run Query");

        jMenuItem18.setText("Run");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem18);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public final void loadInfo(File[] selectedFiles){
        for (File selectedFile : selectedFiles) {
            String filename = selectedFile.getName();
            System.out.println(selectedFile);
            
            Map<String, Term>[] list = null ;
            
            switch (filename) {
                case "crime_file.txt":
                    
                    File fcrime = new File("test cases/crimedb.txt");
                    
                    if(fcrime.exists()){
                         Query presis =  new Query("consult('test cases/crimedb.txt')");
                        presis.hasSolution();
                    }else{
                         Query q3 =  new Query("main_read('test cases/crime_file.txt')");
                         q3.hasSolution();//run query
                    }
                   
                    Query q4 =  new Query("crime(X,Y,Z,A,B,C)");
                    list = q4.allSolutions();
                    getList(list,filename);
                    break;
                case "crime_org.txt":
                    File forg =  new File("test cases/orgdb.txt");
                    if(forg.exists()){
                         Query presis =  new Query("consult('test cases/orgdb.txt')");
                        presis.hasSolution();
                    }else{
                        Query q5 =  new Query("main_read('test cases/crime_org.txt')");
                         q5.hasSolution();
                    }

                    Query q11 =  new Query("organization(X,Y,Z,A,B)");
                    list = q11.allSolutions();
                    getList(list,filename);
                    break;
                case "org_member.txt":
                    File fmem = new File("test cases/memberdb.txt");
                    if(fmem.exists()){
                         Query presis =  new Query("consult('test cases/memberdb.txt')");
                        presis.hasSolution();
                    }else{
                        Query q7 =  new Query("main_read('test cases/org_member.txt')");
                        q7.hasSolution();
                    }
                    
                    Query q12 =  new Query("belong_to(X,Y)");
                    list = q12.allSolutions();
                    getList(list,filename);
                    break;
                case "suspect_file.txt":

                    File f = new File("test cases/suspectdb.txt");
                    if(f.exists()){
                        Query persistent =  new Query("consult('test cases/suspectdb.txt')");
                        persistent.hasSolution();
                    }else{
                        Query q6 =  new Query("main_read('test cases/suspect_file.txt')");       
                        q6.hasSolution();

                    }
                    Query q14 =  new Query("suspect(X,Y,Z)");
                    list = q14.allSolutions();
                    getList(list,filename);
                    break;
                default:
                     JOptionPane.showMessageDialog(null, "Sorry file (" + filename + ") not accepted!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            }
         
    }
 }
    

    public void loadFileAction(){
        JFileChooser prologFiles = new JFileChooser();
        prologFiles.setFileSelectionMode(JFileChooser.FILES_ONLY);
        prologFiles.setMultiSelectionEnabled(true);
        Path currentRelativePath = Paths.get("");
        String s = currentRelativePath.toAbsolutePath().toString();
        prologFiles.setCurrentDirectory(new File(s +"/test cases"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        prologFiles.setFileFilter(filter);
        prologFiles.showOpenDialog(jLabel1);
        
        if (prologFiles.getSelectedFile() == null){
            return ;
        }
    
        File[] selectedFiles = prologFiles.getSelectedFiles();      
   
        loadInfo(selectedFiles);
    }
    
    public void retractCrime(boolean alert){
        Query retrCrime = new Query("retractall(crime(_,_,_,_,_,_))");
       
        if( retrCrime.hasSolution() ){
            System.out.println("Retracted Crime file");
            if(alert)
            JOptionPane.showMessageDialog(null, "Retracted Crime file!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
            
            //remove the 'crime file tab'
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
             if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("crime file") ){
                 jTabbedPane1.remove(i);
             }
        }
            if(jTabbedPane1.getTabCount() == 0){
                JLabel welcome = new JLabel("No records available");
                welcome.setHorizontalAlignment(SwingConstants.CENTER);
                welcome.setHorizontalTextPosition(SwingConstants.CENTER);
                welcome.setFont(new Font("LucidaGrande", Font.BOLD, 36));
                jTabbedPane1.add("Welcome", welcome);
            }
            
            if(new File("test cases/crimedb.txt").exists())
                new File("test cases/crimedb.txt").delete();
           
        }else{
            System.out.println("Could not retract crime file");
            JOptionPane.showMessageDialog(null, "Could not retract crime file!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void retractCrimeOrg(boolean alert){
        Query retrCrime = new Query("retractall(organization(_,_,_,_,_))");
       
        if( retrCrime.hasSolution() ){
            System.out.println("Retracted Crime Org");
            if(alert)
            JOptionPane.showMessageDialog(null, "Retracted Crime org!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
            
            //remove the 'crime file tab'
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
             if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("crime org") ){
                 jTabbedPane1.remove(i);
             }
        }
            if(jTabbedPane1.getTabCount() == 0){
                JLabel welcome = new JLabel("No records available");
                welcome.setHorizontalAlignment(SwingConstants.CENTER);
                welcome.setHorizontalTextPosition(SwingConstants.CENTER);
                welcome.setFont(new Font("LucidaGrande", Font.BOLD, 36));
                jTabbedPane1.add("Welcome", welcome);
            }
           
             if(new File("test cases/orgdb.txt").exists())
                new File("test cases/orgdb.txt").delete();
           
            
        }else{
            System.out.println("Could not retract crime org");
            JOptionPane.showMessageDialog(null, "Could not retract crime org!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void retractOrgMember(boolean alert){
        Query retrbelong_to = new Query("retractall(belong_to(_,_))");
       
        if( retrbelong_to.hasSolution() ){
            System.out.println("Retracted Org member");
            if(alert)
            JOptionPane.showMessageDialog(null, "Retracted org member!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
            
            //remove the 'crime file tab'
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
             if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("org member") ){
                 jTabbedPane1.remove(i);
             }
        }
            if(jTabbedPane1.getTabCount() == 0){
                JLabel welcome = new JLabel("No records available");
                welcome.setHorizontalAlignment(SwingConstants.CENTER);
                welcome.setHorizontalTextPosition(SwingConstants.CENTER);
                welcome.setFont(new Font("LucidaGrande", Font.BOLD, 36));
                jTabbedPane1.add("Welcome", welcome);
            }
           
             if(new File("test cases/memberdb.txt").exists())
                new File("test cases/memberdb.txt").delete();
           
            
        }else{
            System.out.println("Could not retract org member");
            JOptionPane.showMessageDialog(null, "Could not retract org member!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void retractSuspect(boolean alert){
        Query retrsuspect = new Query("retractall(suspect(_,_,_))");
       
        if( retrsuspect.hasSolution() ){
            System.out.println("Retracted suspect file");
            if(alert)
            JOptionPane.showMessageDialog(null, "Retracted suspect file!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
            
            //remove the 'crime file tab'
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
             if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("suspect file") ){
                 jTabbedPane1.remove(i);
             }
        }
            if(jTabbedPane1.getTabCount() == 0){
                JLabel welcome = new JLabel("No records available");
                welcome.setHorizontalAlignment(SwingConstants.CENTER);
                welcome.setHorizontalTextPosition(SwingConstants.CENTER);
                welcome.setFont(new Font("LucidaGrande", Font.BOLD, 36));
                jTabbedPane1.add("Welcome", welcome);
            }
           
             if(new File("test cases/suspectdb.txt").exists())
                new File("test cases/suspectdb.txt").delete();
            
        }else{
            System.out.println("Could not retract suspect file");
            JOptionPane.showMessageDialog(null, "Could not retract suspect file!", "Information",
                                        JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void retractAll(){
        Query retr = new Query("retractall(suspect(_,_,_))");
        Query retr1 = new Query("retractall(belong_to(_,_))");
        Query retr2 = new Query("retractall(organization(_,_,_,_,_))");
        Query retr3 = new Query("retractall(crime(_,_,_,_,_,_))");
        
        String status = "";
        
        if(retr.hasSolution()){ 
            status += "Suspect file retracted \n"; 
            //remove the 'crime file tab'
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                 if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("suspect file") ){
                     jTabbedPane1.remove(i);
                 }
            }
             if(new File("test cases/suspectdb.txt").exists())
                new File("test cases/suspectdb.txt").delete();
            
        }
        if(retr1.hasSolution()) {
            status += "org member retracted\n"; 
            //remove the 'crime file tab'
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                 if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("org member") ){
                     jTabbedPane1.remove(i);
                 }
            }
             if(new File("test cases/memberdb.txt").exists())
                new File("test cases/memberdb.txt").delete();
        }
        if(retr2.hasSolution()) {
            status += "crime org retracted\n";
            //remove the 'crime file tab'
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                 if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("crime org") ){
                     jTabbedPane1.remove(i);
                 }
            }
             if(new File("test cases/orgdb.txt").exists())
                new File("test cases/orgdb.txt").delete();
        }
        if(retr3.hasSolution()) {
            status += "crime file retracted\n";
            //remove the 'crime file tab'
            for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                 if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase("crime file") ){
                     jTabbedPane1.remove(i);
                 }
            }
             if(new File("test cases/crimedb.txt").exists())
                new File("test cases/crimedb.txt").delete();
        }
        
        if(jTabbedPane1.getTabCount() == 0){
            JLabel welcome = new JLabel("No records available");
            welcome.setHorizontalAlignment(SwingConstants.CENTER);
            welcome.setHorizontalTextPosition(SwingConstants.CENTER);
            welcome.setFont(new Font("LucidaGrande", Font.BOLD, 36));
            jTabbedPane1.add("Welcome", welcome);
        }
        
        if(status.equals("")){
            status = "No retraction was successful";
        }
        
        JOptionPane.showMessageDialog(null, status, "Information",
                                        JOptionPane.ERROR_MESSAGE);
        
        
    }
    
    public void getList(Map<String, Term> [] list, String filename){
      
        if( jTabbedPane1.getTabCount() > 0 && jTabbedPane1.getTitleAt(0).equalsIgnoreCase("welcome") ){
            jTabbedPane1.removeAll();
        }
        
        DefaultTableModel tableModel, tableModel1, tableModel2, tableModel3 = null ;
        
        String tabName = filename;
        tabName = tabName.replaceAll(".txt", "").replace('_', ' ').toUpperCase();//crime_file.txt > CRIME FILE

        switch (filename) {
            case "crime_file.txt":
                JPanel panel =  new JPanel();
                JTable table =  new JTable();
                //click sort on headers
                table.setAutoCreateRowSorter(true);
                table.setPreferredScrollableViewportSize(new Dimension(600, 120));
                table.setFillsViewportHeight(true); 
                
                //a scrollbar to view additional content
                JScrollPane jScrollPane1 = new JScrollPane(table);
                panel.add(jScrollPane1);
                panel.setOpaque(true); //content panes must be opaque
                //panel.set
                
                //set the header of the table
                JTableHeader header = table.getTableHeader();
                header.setFont(new Font("SansSerif", Font.ITALIC, 14));
   
                //attributes of the jtable, no tooltip, no gridcolor, height =24, rowmargin=2, don't display a grid
                table.setToolTipText("");
                table.setGridColor(new java.awt.Color(0, 0, 0));
                table.setRowHeight(24);
                table.setRowMargin(2);
                table.setShowGrid(false);

               tableModel =  (DefaultTableModel)table.getModel();
                tableModel.addColumn("Crime ID" );
                tableModel.addColumn("Location");
                tableModel.addColumn("Items taken");
                tableModel.addColumn("Place attacked");
                tableModel.addColumn("wepaons used");
                tableModel.addColumn("criminal traits");
                
                //align the first column to the center
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
                table.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
    
                        
                panel.setLayout(new BorderLayout());
                panel.add(header, BorderLayout.NORTH);
                panel.add(table, BorderLayout.CENTER);
 
                for (Map<String, Term> list1 : list) {
                    tableModel.addRow(new Object[]{
                        Integer.parseInt(list1.get("X").toString().replaceAll("'","")),
                        list1.get("Y").toString().replaceAll("'",""),
                        list1.get("Z").toString().replaceAll("'",""),
                        list1.get("A").toString().replaceAll("'",""),
                        list1.get("B").toString().replaceAll("'",""),
                        list1.get("C").toString().replaceAll("'","")
                    });
                }
                //sort by the index-- column 0
                TableRowSorter<TableModel> sorter = new TableRowSorter<>(table.getModel());
                table.setRowSorter(sorter);
                List<RowSorter.SortKey> sortKeys = new ArrayList<>();

                int columnIndexToSort = 0;
                sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));

                sorter.setSortKeys(sortKeys);
                sorter.sort();
                
                //table the panel to the tabbedpanel
                
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase(tabName) ){
                        jTabbedPane1.remove(i);
                    }
                 }
                
                jTabbedPane1.addTab(tabName, panel);
                jTabbedPane1.setTitleAt(jTabbedPane1.getTabCount()-1, tabName);
                
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
                break;
            case "crime_org.txt":
                
                JPanel panel1 =  new JPanel();
                JTable table1 = new JTable();
                
                 //click sort on headers
                table1.setAutoCreateRowSorter(true);
                table1.setPreferredScrollableViewportSize(new Dimension(600, 120));
                table1.setFillsViewportHeight(true); 
                
                
                //a scrollbar to view additional content
                JScrollPane jScrollPane2 = new JScrollPane(table1);
                panel1.add(jScrollPane2);
                panel1.setOpaque(true); //content panes must be opaque
               
                //set the header of the table
                JTableHeader header1 = table1.getTableHeader();
                header1.setFont(new Font("SansSerif", Font.ITALIC, 14));
   
                //attributes of the jtable, no tooltip, no gridcolor, height =24, rowmargin=2, don't display a grid
                table1.setToolTipText("");
                table1.setGridColor(new java.awt.Color(0, 0, 0));
                table1.setRowHeight(24);
                table1.setRowMargin(2);
                table1.setShowGrid(false);
               
                
                tableModel1 =  (DefaultTableModel)table1.getModel();
                tableModel1.addColumn("organization name");
                tableModel1.addColumn("interests");
                tableModel1.addColumn("operating locations");
                tableModel1.addColumn("wepaons-traits");
                

                //align the first column to the center
                DefaultTableCellRenderer centerRenderer1 = new DefaultTableCellRenderer();
                centerRenderer1.setHorizontalAlignment(SwingConstants.CENTER);
                table1.getColumnModel().getColumn(0).setCellRenderer(centerRenderer1);
    
                        
                panel1.setLayout(new BorderLayout());
                panel1.add(header1, BorderLayout.NORTH);
                panel1.add(table1, BorderLayout.CENTER);
                
                
                for (Map<String, Term> list1 : list) {
                    tableModel1.addRow(new Object[]{
                        list1.get("X").toString().replaceAll("'",""),
                        list1.get("Y").toString().replaceAll("'",""),
                        list1.get("Z").toString().replaceAll("'",""),
                        list1.get("A").toString().replaceAll("'",""),
                        list1.get("B").toString().replaceAll("'","")
                    });
                 }   
                
                //sort by the index-- column 0
                TableRowSorter<TableModel> sorter1 = new TableRowSorter<>(table1.getModel());
                table1.setRowSorter(sorter1);
                List<RowSorter.SortKey> sortKeys1 = new ArrayList<>();

                int columnIndexToSort1 = 0;
                sortKeys1.add(new RowSorter.SortKey(columnIndexToSort1, SortOrder.ASCENDING));

                sorter1.setSortKeys(sortKeys1);
                sorter1.sort();
                
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase(tabName) ){
                        jTabbedPane1.remove(i);
                    }
                 }
                 
                jTabbedPane1.addTab(tabName, panel1);
                jTabbedPane1.setTitleAt(jTabbedPane1.getTabCount()-1, tabName);            
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
                    
                   break;
            case "org_member.txt":
               
                JPanel panel2 =  new JPanel();
                JTable table2 = new JTable();
                
                table2.setAutoCreateRowSorter(true);
                table2.setPreferredScrollableViewportSize(new Dimension(600, 120));
                table2.setFillsViewportHeight(true); 
                
                //a scrollbar to view additional content
                JScrollPane jScrollPane3 = new JScrollPane(table2);
                panel2.add(jScrollPane3);
                panel2.setOpaque(true); //content panes must be opaque
                
                 //set the header of the table
                JTableHeader header2 = table2.getTableHeader();
                header2.setFont(new Font("SansSerif", Font.ITALIC, 14));
                
                //attributes of the jtable, no tooltip, no gridcolor, height =24, rowmargin=2, don't display a grid
                table2.setToolTipText("");
                table2.setGridColor(new java.awt.Color(0, 0, 0));
                table2.setRowHeight(24);
                table2.setRowMargin(2);
                table2.setShowGrid(false);
                
                tableModel2 = (DefaultTableModel)table2.getModel(); 
                tableModel2.addColumn("organization name");
                tableModel2.addColumn("member name");
                     
                //center cell values
                DefaultTableCellRenderer centerRenderer2 = new DefaultTableCellRenderer();
                centerRenderer2.setHorizontalAlignment(SwingConstants.CENTER);
                table2.getColumnModel().getColumn(0).setCellRenderer(centerRenderer2);
                table2.getColumnModel().getColumn(1).setCellRenderer(centerRenderer2);
                //center column values
               ((DefaultTableCellRenderer)table2.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(0);
                
                panel2.setLayout(new BorderLayout());
                panel2.add(header2, BorderLayout.NORTH);
                panel2.add(table2, BorderLayout.CENTER);

                for (Map<String, Term> list1 : list) {
                    tableModel2.addRow(new Object[]{
                        list1.get("Y").toString().replaceAll("'", ""),
                        list1.get("X").toString().replaceAll("'","")
                    });
               }  
                
                //sort by the index-- column 0
                TableRowSorter<TableModel> sorter2 = new TableRowSorter<>(table2.getModel());
                table2.setRowSorter(sorter2);
                List<RowSorter.SortKey> sortKeys2 = new ArrayList<>();

                int columnIndexToSort2 = 0;
                sortKeys2.add(new RowSorter.SortKey(columnIndexToSort2, SortOrder.ASCENDING));

                sorter2.setSortKeys(sortKeys2);
                sorter2.sort();
                
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase(tabName) ){
                        jTabbedPane1.remove(i);
                    }
                 }
                
                jTabbedPane1.addTab(tabName, panel2);
                jTabbedPane1.setTitleAt(jTabbedPane1.getTabCount()-1, tabName);
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
                   
                
               break;
            case "suspect_file.txt":
                JPanel panel3 =  new JPanel();
                JTable table3 = new JTable();
                
                table3.setAutoCreateRowSorter(true);
                table3.setPreferredScrollableViewportSize(new Dimension(600, 120));
                table3.setFillsViewportHeight(true);           
                
                //a scrollbar to view additional content
                JScrollPane jScrollPane4 = new JScrollPane(table3);
                panel3.add(jScrollPane4);
                panel3.setOpaque(true); //content panes must be opaque
                
                //set the header of the table
                JTableHeader header3 = table3.getTableHeader();
                header3.setFont(new Font("SansSerif", Font.ITALIC, 14));
                
                //attributes of the jtable, no tooltip, no gridcolor, height =24, rowmargin=2, don't display a grid
                table3.setToolTipText("");
                table3.setGridColor(new java.awt.Color(0, 0, 0));
                table3.setRowHeight(24);
                table3.setRowMargin(2);
                table3.setShowGrid(false);
                
                tableModel3 =  (DefaultTableModel)table3.getModel();
                    tableModel3.addColumn("crime ID");
                    tableModel3.addColumn("Suspect Name");
                    tableModel3.addColumn("Traits");
                
                //align the first column to the center
                DefaultTableCellRenderer centerRenderer3 = new DefaultTableCellRenderer();
                centerRenderer3.setHorizontalAlignment(SwingConstants.CENTER);
                table3.getColumnModel().getColumn(0).setCellRenderer(centerRenderer3);
                table3.getColumnModel().getColumn(1).setCellRenderer(centerRenderer3);
                table3.getColumnModel().getColumn(2).setCellRenderer(centerRenderer3);
               ((DefaultTableCellRenderer)table3.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(0);
                
                panel3.setLayout(new BorderLayout());
                panel3.add(header3, BorderLayout.NORTH);
                panel3.add(table3, BorderLayout.CENTER);

                
                for (Map<String, Term> list1 : list) {
                    tableModel3.addRow(new Object[]{
                        list1.get("X").toString().replaceAll("'",""),
                        list1.get("Y").toString().replaceAll("'",""),
                        list1.get("Z").toString().replaceAll("'", "")
                  });
                } 
                
                //sort by the index-- column 0
                TableRowSorter<TableModel> sorter3 = new TableRowSorter<>(table3.getModel());
                table3.setRowSorter(sorter3);
                List<RowSorter.SortKey> sortKeys3 = new ArrayList<>();

                int columnIndexToSort3 = 0;
                sortKeys3.add(new RowSorter.SortKey(columnIndexToSort3, SortOrder.ASCENDING));

                sorter3.setSortKeys(sortKeys3);
                sorter3.sort();
                
                for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
                    if ( jTabbedPane1.getTitleAt(i).equalsIgnoreCase(tabName) ){
                        jTabbedPane1.remove(i);
                    }
                 }
                
                jTabbedPane1.addTab(tabName, panel3);
                jTabbedPane1.setTitleAt(jTabbedPane1.getTabCount()-1, tabName);    
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
               break;
        }
    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        //close the application
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        retractCrime(true);
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        retractCrimeOrg(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        retractOrgMember(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        retractSuspect(true);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        retractAll();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(false);
        jTabbedPane2.setVisible(true);
        
        jTabbedPane2.setTitleAt(0,"Add Crime info");
        jTabbedPane2.setSelectedIndex(0);
        jTabbedPane2.setEnabledAt(0,true);
        jTabbedPane2.setTitleAt(1,"");
        jTabbedPane2.setEnabledAt(1,false);
         jTabbedPane2.setTitleAt(2,"");
        jTabbedPane2.setEnabledAt(2,false);
         jTabbedPane2.setTitleAt(3,"");
        jTabbedPane2.setEnabledAt(3,false);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
        loadFileAction();
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(false);
        jTabbedPane2.setVisible(true);
         jTabbedPane2.setTitleAt(0,"");
        jTabbedPane2.setEnabledAt(0,false);
        jTabbedPane2.setSelectedIndex(1);
        jTabbedPane2.setTitleAt(1,"Add Crime Org info");
        jTabbedPane2.setEnabledAt(1,true);
         jTabbedPane2.setTitleAt(2,"");
        jTabbedPane2.setEnabledAt(2,false);
         jTabbedPane2.setTitleAt(3,"");
        jTabbedPane2.setEnabledAt(3,false);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(false);
        jTabbedPane2.setVisible(true);
         jTabbedPane2.setTitleAt(0,"");
        jTabbedPane2.setEnabledAt(0,false);
        jTabbedPane2.setTitleAt(1,"");
        jTabbedPane2.setEnabledAt(1,false);
        jTabbedPane2.setSelectedIndex(2);
         jTabbedPane2.setTitleAt(2,"Add Suspect");
        jTabbedPane2.setEnabledAt(2,true);
         jTabbedPane2.setTitleAt(3,"");
        jTabbedPane2.setEnabledAt(3,false);
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(false);
        jTabbedPane2.setVisible(true);
         jTabbedPane2.setTitleAt(0,"");
        jTabbedPane2.setEnabledAt(0,false);
        jTabbedPane2.setTitleAt(1,"");
        jTabbedPane2.setEnabledAt(1,false);
         jTabbedPane2.setTitleAt(2,"");
        jTabbedPane2.setEnabledAt(2,false);
        jTabbedPane2.setSelectedIndex(3);
         jTabbedPane2.setTitleAt(3,"Add Org Member");
        jTabbedPane2.setEnabledAt(3,true);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          Map<String, Term> [] list;

        if(jFormattedTextField2.getText().trim().isEmpty() ||
                jTextField2.getText().trim().isEmpty() || 
                jTextField3.getText().trim().isEmpty() ||
                 jTextField4.getText().trim().isEmpty() || 
                 jTextField5.getText().trim().isEmpty() || 
                 jTextField6.getText().trim().isEmpty() ){
            JOptionPane.showMessageDialog(null, "Error! Please enter data into all fields!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            return;
        }
           
        
        String  crime = String.format("assertCrime(%d, '%s', '%s','%s','%s','%s')", 
                    Integer.parseInt(jFormattedTextField2.getText()),
                        jTextField2.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField3.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                         jTextField4.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField5.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField6.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim());
        Query addCrime = new Query(crime);
        
        if(addCrime.hasSolution()){
            
            JOptionPane.showMessageDialog(null, "Record succesfully added!", "Success Message",
                                        JOptionPane.INFORMATION_MESSAGE);
            
            System.out.print("Added");
          
                Query q4 =  new Query("crime(X,Y,Z,A,B,C)");
                list = q4.allSolutions();
                getList(list,"crime_file.txt");
              
            //reset the textboxes
                jFormattedTextField2.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                 jTextField4.setText("");
                 jTextField5.setText("");
                 jTextField6.setText("");
        }else{
             JOptionPane.showMessageDialog(null, "Error! Record not added!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Map<String, Term> [] list;

        if(jFormattedTextField1.getText().trim().isEmpty() || jTextField15.getText().trim().isEmpty() || jTextField16.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error! Please enter data into all fields!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            return;
        }
           
        
        String  suspect = String.format("assertSuspect(%d, '%s', '%s')", 
                    Integer.parseInt(jFormattedTextField1.getText()),
                        jTextField15.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField16.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim());
        Query addSuspect = new Query(suspect);
        
        if(addSuspect.hasSolution()){
            
            JOptionPane.showMessageDialog(null, "Record succesfully added!", "Success Message",
                                        JOptionPane.INFORMATION_MESSAGE);
            
            System.out.print("Added");
          
                Query q4 =  new Query("suspect(X,Y,Z)");
                list = q4.allSolutions();
                getList(list,"suspect_file.txt");
              
            //reset the textboxes
                jFormattedTextField1.setText("");
                jTextField15.setText("");
                jTextField16.setText("");
        }else{
             JOptionPane.showMessageDialog(null, "Error! Record not added!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Map<String, Term> [] list;

        if(jTextField7.getText().trim().isEmpty() || 
                jTextField8.getText().trim().isEmpty() ||
                    jTextField9.getText().trim().isEmpty() ||
                        jTextField10.getText().trim().isEmpty() ||
                            jTextField11.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error! Please enter data into all fields!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            return;
        }
           
        
        String  org = String.format("assertOrg('%s', '%s', '%s', '%s', '%s')", 
                    jTextField7.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField8.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField9.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField10.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField11.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim()
                        );
        Query addOrg = new Query(org);
        
        if(addOrg.hasSolution()){
            
            JOptionPane.showMessageDialog(null, "Record succesfully added!", "Success Message",
                                        JOptionPane.INFORMATION_MESSAGE);
            
            System.out.print("Added");
          
            Query q4 =  new Query("organization(X,Y,Z,A,B)");
            list = q4.allSolutions();
            getList(list,"crime_org.txt");
              
            //reset the textboxes
                jTextField7.setText("");
                jTextField8.setText("");
                jTextField9.setText("");
                jTextField10.setText("");
                jTextField11.setText("");
        }else{
             JOptionPane.showMessageDialog(null, "Error! Record not added!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
        }

        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Map<String, Term> [] list;

        if(jTextField13.getText().trim().isEmpty() || 
                jTextField14.getText().trim().isEmpty() )
                   {
            JOptionPane.showMessageDialog(null, "Error! Please enter data into all fields!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            return;
        }
           
        
        String  member = String.format("assertMember('%s', '%s')", 
                    jTextField13.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim(),
                        jTextField14.getText().replaceAll("[^a-zA-Z\\s,-]", "").trim()
                        );
        Query addMember = new Query(member);
        
        if(addMember.hasSolution()){
            
            JOptionPane.showMessageDialog(null, "Record succesfully added!", "Success Message",
                                        JOptionPane.INFORMATION_MESSAGE);
            
            System.out.print("Added");
          
            Query q4 =  new Query("belong_to(X,Y)");
            list = q4.allSolutions();
            getList(list,"org_member.txt");
              
            //reset the textboxes
                jTextField13.setText("");
                jTextField14.setText("");
                
        }else{
             JOptionPane.showMessageDialog(null, "Error! Record not added!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private Object[] getCrimeIds(){
                    //Object [] h;
                    ArrayList<Object> newObj = new ArrayList<Object>();
                    
                    Map<String, Term>[] list = null;
                    
                    Query q4 =  new Query("crime(X,Y,Z,A,B,C)");
                    list = q4.allSolutions();
                    
                    for (Map<String, Term> list1 : list) {
                        newObj.add(list1.get("X").toString().replaceAll("'", ""));
                    }
                    Collections.reverse(newObj);
                    return newObj.toArray();
    }
    
    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed

        
        Object[] possibilities = getCrimeIds();
        if(possibilities ==null){
         
            JOptionPane.showMessageDialog(null, "Error! Something went wrong!", "Error Message",
                                        JOptionPane.ERROR_MESSAGE);
            //some error message explain that I have no idea what went wrong
            return;
        
        }
            String crime_id = (String)JOptionPane.showInputDialog(
                    this,"Select a Crime Id to query: ",
                    "Select",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    possibilities,
                    "ham");
        
            jTabbedPane3.setTitleAt(0, "Crime "+crime_id);
            
     jTabbedPane1.setVisible(false);
        jTabbedPane2.setVisible(false);
        jTabbedPane3.setVisible(true);
        
        //reset everything
       
        jList1.setModel(new DefaultListModel());
         jList3.setModel(new DefaultListModel());
         jTable1.setModel(new DefaultTableModel());
          jTable2.setModel(new DefaultTableModel());
           jTable3.setModel(new DefaultTableModel());
        
     Query q = new Query("suspected_organization", new Term[] {new Variable("Crime_id"),new Variable("Org_name")});
     
     Query suspects = new Query("suspects_of_crime", new Term[] {new Variable("Crime_id"),new Variable("Suspect")});
     
     Query members_of_organization_query  = new Query("members_of_organization(Member, Org_name)");
     
     Query known_operating_location_query  = new Query("known_operating_location(Org_name, Org_location)");
        
     Query weapons_used_query  = new Query("weapons_used(Org_name, Weapons)");
     
     jTabbedPane1.setVisible(false);
     jTabbedPane2.setVisible(false);
     
        if(q.hasSolution()){//run
            Map<String, Term>[] suspected_organization_list = q.allSolutions() ;

            Map<String, Integer> frequency = new HashMap<>();
            
           for (Map<String, Term> list1 : suspected_organization_list) {
              String k = list1.get("Crime_id").toString().replaceAll("'", "");

              if(k.equalsIgnoreCase(crime_id)){
                   String  x = list1.get("Org_name").toString().replaceAll("'", "");
                   if(frequency.containsKey(x)){
                       frequency.put(x, frequency.get(x)+1);
                   }else{
                       frequency.put(x, 1);
                   }
              }
           }
           
           
           DefaultListModel listModel = new DefaultListModel();

           List<Integer> c = new ArrayList<>(frequency.values());//load values into a list
           Collections.sort(c);//sort list of values
           
           for(int i=0 ; i< c.size(); ++i) {
                listModel.addElement(frequency.keySet().toArray()[i]); 
            }
           if(listModel.isEmpty()){
              listModel.addElement("No Suspected Organizations");  
           }
          jList1.setModel(listModel);
        }
        if(suspects.hasSolution()){//run
            Map<String, Term>[] suspects_list = suspects.allSolutions() ;

            Map<String, Integer> frequency = new HashMap<>();

           for (Map<String, Term> list1 : suspects_list) {
              String k = list1.get("Crime_id").toString().replaceAll("'", "");

              if(k.equalsIgnoreCase(crime_id)){
                   String  x = list1.get("Suspect").toString().replaceAll("'", "");
                   if(frequency.containsKey(x)){
                       frequency.put(x, frequency.get(x)+1);
                   }else{
                       frequency.put(x, 1);
                   }
              }
           }

           DefaultListModel listModel = new DefaultListModel();

           List<Integer> c = new ArrayList<>(frequency.values());
           Collections.sort(c);
           
           for(int i=0 ; i< c.size(); ++i) {
                listModel.addElement(frequency.keySet().toArray()[i]); 
            }
           if(listModel.isEmpty()){
              listModel.addElement("No Suspects Found");  
           }
          jList3.setModel(listModel);
        }
        
        if(members_of_organization_query.hasSolution()){
            
             Map<String, Term>[] members = members_of_organization_query.allSolutions() ;
             Map<String, Vector<String>> rwCol = new HashMap();
             DefaultTableModel table = (DefaultTableModel) jTable1.getModel();

                for (Map<String, Term> list1 : members) {
                    //if()
               
                    String k = list1.get("Org_name").toString().replaceAll("'","");
                    String mem = list1.get("Member").toString().replaceAll("'","");
                    if(rwCol.containsKey(k)){
                        rwCol.get(k).add(mem);
                    }else{
                        rwCol.put(k, new Vector());
                        rwCol.get(k).add(mem);
                    }

                }
                 for (Map.Entry<String, Vector<String>> entrySet : rwCol.entrySet()) {
                String key = entrySet.getKey();
                Vector<String> value = entrySet.getValue();
                table.addColumn(key,value);
            }
        }
        
        if(known_operating_location_query.hasSolution()){
            Map<String, Term>[] locations = known_operating_location_query.allSolutions() ;
            Map<String, Vector<String>> rolColLocation = new HashMap();
            DefaultTableModel table = (DefaultTableModel) jTable3.getModel();
                
                for (Map<String, Term> list1 : locations) {
                    
                    String k = list1.get("Org_name").toString().replaceAll("'","");
                    String mem = list1.get("Org_location").toString().replaceAll("'","");
                    
                    if(rolColLocation.containsKey(k)){
                        rolColLocation.get(k).add(mem);
                    }else{
                        rolColLocation.put(k, new Vector());
                        rolColLocation.get(k).add(mem);
                    }
                    
                }
                 for (Map.Entry<String, Vector<String>> entrySet : rolColLocation.entrySet()) {
                String key = entrySet.getKey();
                Vector<String> value = entrySet.getValue();
                table.addColumn(key,value);
            }
        }
        if(weapons_used_query.hasSolution()){
            Map<String, Term>[] weapons = weapons_used_query.allSolutions() ;
            Map<String, Vector<String>> rolColWeapon = new HashMap();
            DefaultTableModel table = (DefaultTableModel) jTable2.getModel();
               
                for (Map<String, Term> list1 : weapons) {
                    String k = list1.get("Org_name").toString().replaceAll("'","");
                    String mem = list1.get("Weapons").toString().replaceAll("'","");
                    if(rolColWeapon.containsKey(k)){
                         rolColWeapon.get(k).add(mem);
                     }else{
                         rolColWeapon.put(k, new Vector());
                         rolColWeapon.get(k).add(mem);
                     }
                }
                for (Map.Entry<String, Vector<String>> entrySet : rolColWeapon.entrySet()) {
                    String key = entrySet.getKey();
                    Vector<String> value = entrySet.getValue();
                    table.addColumn(key,value);
                }
        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setVisible(true);
        jTabbedPane2.setVisible(false);
        jTabbedPane3.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    
}
